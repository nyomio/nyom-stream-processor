plugins {
    id 'application'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id "org.jetbrains.kotlin.kapt" version "1.3.50"
    id 'net.ltgt.apt' version '0.20'
}

group 'com.inepex'
version '0.1'
mainClassName = 'com.inepex.nyomagestreamprocessor.AppKt'

ext {
    asyncHttpClientVersion = '2.10.0'
    caffeineVersion = '2.7.0'
    commonsCLIVersion = "1.4"
    commonsLangVersion = '3.9'
    commonsMathVersion = '3.6.1'
    elasticVersion = '7.1.1'
    exposedVersion = '0.13.7'
//    flinkConnectorElasticsearchVersion = '1.8.0'
    flinkConnectorKafkaVersion = '1.9.0'
    flinkVersion = '1.9.0'
    geoToolsVersion = '21.0'
    guiceVersion = '4.2.2'
    hikariCpVersion = '3.3.1'
    jacksonVersion = '2.9.9'
    javaVersion = '1.8'
    jtsVersion = '1.16.1'
    kafkaVersion = '2.2.0'
    kotlinVersion = '1.3.50'
    logbackVersion = '1.2.3'
    logstashLogbackEncoderVersion = '6.1'
    mapStructVersion = '1.3.0.Final'
    mysqlConnectorVersion = '5.1.46'
    nyomageStreamProcessorApiVersion = '0.2.0'
    protobufVersion = '3.7.1'
    protostuffVersion = '1.5.9'
    rxJavaVersion = '2.2.9'
    scalaBinaryVersion = '2.11'
    slf4jVersion = '1.7.26'
    snakeyamlEngineVersion = '1.0'
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

//applicationDefaultJvmArgs = ["-Dlog4j.configuration=log4j.properties"]

repositories {
    maven { url "http://download.osgeo.org/webdav/geotools"}
    maven {
        credentials {
            username "$inepexInternalMavenUser"
            password "$inepexInternalMavenPassword"
        }
        url "http://maven.inepex.com/repository/internal/"
    }
    mavenCentral()
    jcenter()
    maven { url "https://repository.apache.org/content/repositories/snapshots/" }
    mavenLocal()
}

configurations {
    provided
    compile.extendsFrom provided
}

dependencies {
    compile "org.locationtech.jts:jts-core:${jtsVersion}"
    compile "org.geotools:gt-main:${geoToolsVersion}"
    compile "org.geotools:gt-referencing:${geoToolsVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "ch.qos.logback:logback-core:${logbackVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"
    compile "com.github.ben-manes.caffeine:caffeine:$caffeineVersion"
    compile "com.google.inject:guice:${guiceVersion}:no_aop"
    compile "com.google.protobuf:protobuf-java:${protobufVersion}"
    compile "com.inepex.nyomage:nyomage-streamprocessor-api:${nyomageStreamProcessorApiVersion}"
    compile "commons-cli:commons-cli:${commonsCLIVersion}"
    compile "io.protostuff:protostuff-core:$protostuffVersion"
    compile "io.protostuff:protostuff-runtime:$protostuffVersion"
    compile "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
//    compile "log4j:log4j:${log4jVersion}"
    compile "net.logstash.logback:logstash-logback-encoder:${logstashLogbackEncoderVersion}"
    compile "org.apache.commons:commons-lang3:${commonsLangVersion}"
    compile "org.apache.commons:commons-math3:${commonsMathVersion}"
//    compile "org.apache.flink:flink-connector-elasticsearch6_2.11:$flinkConnectorElasticsearchVersion" //isn't compatible with elasticsearch7
    compile "org.apache.flink:flink-connector-kafka_2.11:${flinkConnectorKafkaVersion}"
    compile "org.apache.kafka:kafka-clients:$kafkaVersion"
    compile "org.asynchttpclient:async-http-client:$asyncHttpClientVersion"
    compile "org.elasticsearch.client:elasticsearch-rest-high-level-client:$elasticVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.mapstruct:mapstruct:${mapStructVersion}"
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
//    compile "org.slf4j:slf4j-log4j12:${slf4jVersion}"
    compile "org.snakeyaml:snakeyaml-engine:${snakeyamlEngineVersion}"
    kapt "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    provided "org.apache.flink:flink-java:${flinkVersion}"
    provided "org.apache.flink:flink-runtime-web_2.11:${flinkVersion}"
    provided "org.apache.flink:flink-streaming-java_${scalaBinaryVersion}:${flinkVersion}"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'nyomage-streamprocessor',
                'Implementation-Version': version,
                'Main-Class': 'com.inepex.nyomagestreamprocessor.AppKt'
    }
    baseName = project.name + '-all'
    from { (configurations.runtime - configurations.provided).collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

