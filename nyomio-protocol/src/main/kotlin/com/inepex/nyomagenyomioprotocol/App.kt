/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.inepex.nyomagenyomioprotocol

import com.google.inject.AbstractModule
import com.google.inject.Guice
import com.google.inject.Inject
import com.google.inject.Singleton
import com.google.inject.assistedinject.FactoryModuleBuilder
import com.inepex.nyomagenyomioprotocol.config.Configuration
import com.inepex.nyomagenyomioprotocol.config.ConfigurationBuilderService
import com.inepex.nyomagenyomioprotocol.logger.Logger
import org.slf4j.LoggerFactory


fun main(args: Array<String>) {
    System.setProperty("APP_ID", "nyomioprotocol")
    LoggerFactory.getLogger("test").info("Started")

    Guice.createInjector(GuiceModule(null)).apply {
        getInstance(App::class.java).execute()
    }
}

@Singleton
class App @Inject constructor(
        private var server: NyomIoGrpcServer
) {

    fun execute() {
        server.start()
    }
}

class GuiceModule constructor(private val runningInIDEWithProfile: String?): AbstractModule() {

    override fun configure() {
        bind(Configuration::class.java).toInstance(ConfigurationBuilderService.build(runningInIDEWithProfile))
        bind(Logger::class.java).toInstance(Logger())

        install(FactoryModuleBuilder().implement(NyomStreamBidirectionalHandler::class.java,
                NyomStreamBidirectionalHandler::class.java).build(NyomStreamBidirectionalHandlerFactory::class.java))
    }
}
